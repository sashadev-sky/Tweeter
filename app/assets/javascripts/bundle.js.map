{"version":3,"sources":["webpack/bootstrap","./frontend/api_util.js","./frontend/follow_toggle.js","./frontend/tweet_compose.js","./frontend/twitter.js","./frontend/users_search.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY,M;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,GAAG;AACxB;AACA,iBAAiB,OAAO;AACxB,KAAK;AACL;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA,yB;;;;;;;;;;;ACvEA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;;;;;;AC3DA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;AACA,mEAAmE,WAAW,EAAE;AAChF;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wCAAwC,kBAAkB;AAC1D;;AAEA;AACA;;AAEA,6BAA6B,qBAAqB;AAClD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,QAAQ,IAAI,cAAc;AACvD;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8B;;;;;;;;;;;AC1FA,qBAAqB,mBAAO,CAAC,oDAAiB;AAC9C,oBAAoB,mBAAO,CAAC,kDAAgB;AAC5C,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C;AACA,qEAAqE;AACrE;AACA;AACA,CAAC;;;;;;;;;;;;ACRD,gBAAgB,mBAAO,CAAC,0CAAY;AACpC,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;;AAEA;AACA,kBAAkB,cAAc;AAChC,gCAAgC,QAAQ;;AAExC;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./frontend/twitter.js\");\n","const APIUtil = {\n\n  followUser: id => APIUtil.changeFollowStatus(id, 'POST'),\n\n  unfollowUser: id => APIUtil.changeFollowStatus(id, 'DELETE'),\n\n  /** before it was just method on its own no value with it. i think with ES6\n   * ur allowed to do property declaraction in a shorter syntax, so instead of doing:\n   * \n   * var x = 0, y = 0\n   * obj = {x: x, y: y}\n   * \n   * you can just do: \n   * \n   * var x = 0, y = 0\n   * obj = {x, y}; \n   * \n   * and they will infer what you mean\n   * \n   * \n   * note 2: you can interpolate for the url value\n   * \n   * note 3: usually something like updating info would be a PUT or PATCH request, which routes\n   * to the path, for ex, /photos/:id, while a POST request is for submitting something totally new,\n   * and routes to /photos, but here I guess it doesnt matter bc we do a POST request, but we provide the \n   * URL to send the request to so would go directly to the controller for that specific user anyways.\n   *   --- we only have a create and delete method in the follows controller anyway.\n   *   ---- so POST actually does make sense - we are creating (POST) a new follow or deleting (DELETE) it.\n   * \n   * note 4: we dont have a data setting here bc we dont need it in the success callback, we just update the text\n   * of the current button that triggered the event\n   * \n  */\n  changeFollowStatus: (id, method) => (\n    $.ajax({\n      url: `/users/${id}/follow`,\n      dataType: 'json',\n      method: `${method}`\n    })\n  ),\n  /**\n   * same thing goes for query here, this is equivalent to saying: { query: query }\n   */\n  searchUsers: query => (\n    $.ajax({\n      url: '/users/search',\n      dataType: 'json',\n      method: 'GET',\n      data: { query }\n    })\n  ),\n\n  createTweet: data => (\n    $.ajax({\n      url: '/tweets',\n      method: 'POST',\n      dataType: 'json',\n      data\n    })\n  )\n\n  // fetchTweets: data => (\n  //   $.ajax({\n  //     url: '/feed',\n  //     method: 'GET',\n  //     dataType: 'json',\n  //     data\n  //   })\n  // )\n};\n\nmodule.exports = APIUtil;","const APIUtil = require('./api_util');\n\n// we allow this options hash here so that we can pass in from users_search the data we need.\n// just an easier way to do what $el.data is already doing\nclass FollowToggle {\n  constructor(el, options) {\n    this.$el = $(el);\n    this.userId = this.$el.data('user-id') || options.userId;\n    this.followState = (this.$el.data('initial-follow-state') ||\n      options.followState);\n    this.render();\n\n    this.$el.on('click', this.handleClick.bind(this));\n  }\n\n  handleClick(event) {\n    // const followToggle = this;\n    event.preventDefault();\n\n    if (this.followState === 'followed') {\n      this.followState = 'unfollowing';\n      this.render();\n      APIUtil.unfollowUser(this.userId).then(() => {\n        this.followState = 'unfollowed';\n        this.render();\n      });\n    } else if (this.followState === 'unfollowed') {\n      this.followState = 'following';\n      this.render();\n      APIUtil.followUser(this.userId).then(() => {\n        this.followState = 'followed';\n        this.render();\n      });\n    }\n  }\n\n\n  render() {\n    switch (this.followState) {\n      case 'followed':\n        this.$el.prop('disabled', false);\n        this.$el.html('Unfollow!');\n        break;\n      case 'unfollowed':\n        this.$el.prop('disabled', false);\n        this.$el.html('Follow!');\n        break;\n      case 'following':\n        this.$el.prop('disabled', true);\n        this.$el.html('Following...');\n        break;\n      case 'unfollowing':\n        this.$el.prop('disabled', true);\n        this.$el.html('Unfollowing...');\n        break;\n    }\n  }\n}\n\nmodule.exports = FollowToggle;","const APIUtil = require('./api_util');\n\nclass TweetCompose {\n  constructor(el) {\n    this.$el = $(el);\n    // this is referring to textarea[name=\"tweet[content]\"].\n    // to use any of the meta - characters(such as !\"#$%&'()*+,./:;<=>?@[\\]^`{|}~ ) \n    // as a literal part of a name, it must be escaped with with two backslashes: \\\\\n    \n    this.$input = this.$el.find('textarea[name=tweet\\\\[content\\\\]]');\n\n    // figure out if this means like if you just type in anything: yes. \n    // 'input' reacts w/ the type of each char\n    \n    this.$input.on('input', this.handleInput.bind(this));\n\n    // this.$mentionedUsersDiv = this.$el.find('.mentioned-users');\n    // this.$el.find('.add-mentioned-user').on(\n    //   'click', this.addMentionedUser.bind(this));\n    // this.$mentionedUsersDiv.on(\n    //   'click', '.remove-mentioned-user', this.removeMentionedUser.bind(this));\n\n    this.$el.on('submit', this.submit.bind(this));\n  }\n\n  // addMentionedUser(event) {\n  //   event.preventDefault();\n\n  //   this.$mentionedUsersDiv.append(this.newUserSelect());\n  // }\n\n  // clearInput() {\n  //   this.$input.val('');\n  //   this.$mentionedUsersDiv.find('ul').empty();\n  //   this.$el.find(':input').prop('disabled', false);\n  //   this.$el.find('.char-left').empty();\n  // }\n\n  handleInput(event) {\n    const inputLength = this.$input.val().length;\n\n    this.$el.find('.char-left').text(`${140 - inputLength} characters left`);\n  }\n\n  handleSuccess(data) {\n    const $tweetsUl = $(this.$el.data('tweets-ul'));\n\n    const $listEl = $(`<li>${JSON.stringify(data)}</li>`);\n    $tweetsUl.append($listEl);\n    // $tweetsUl.trigger('insert-tweet', data);\n\n    // this.clearInput();\n  }\n\n  // newUserSelect() {\n  //   const userOptions = window.users\n  //     .map(user =>\n  //       `<option value='${user.id}'>${user.username}</option>`)\n  //     .join('');\n\n  //   const html = `\n  //     <div>\n  //       <select name='tweet[mentioned_user_ids][]'>\n  //         ${userOptions}\n  //       </select>\n  //       <button class='remove-mentioned-user'>Remove</button>\n  //     </div>`;\n\n  //   return $(html);\n  // }\n\n  // removeMentionedUser(event) {\n  //   event.preventDefault();\n  //   $(event.currentTarget).parent().remove();\n  // }\n\n  submit(event) {\n    event.preventDefault();\n    // remember that serialize() and serializeJSON both called on form itself\n    const data = this.$el.serializeJSON();\n\n    //  input -> $(':input') -> all input, textarea, select & button els.\n    //  note: Because these selectors are jQuery extension and not part of the CSS specification, queries using them cannot take advantage of the performance boost provided by the native DOM querySelectorAll() method.To achieve the best performance when using these selectors, first select some elements using a pure CSS selector, then use.filter(\":selectorName\").\n    // have to make sure to disable **after** - not before - serializing or our values would be ignored\n    this.$el.find(':input').prop('disabled', true);\n\n    APIUtil.createTweet(data).then(tweet => this.handleSuccess(tweet));\n  }\n}\n\nmodule.exports = TweetCompose;","const FollowToggle = require('./follow_toggle');\nconst UsersSearch = require('./users_search');\nconst TweetCompose = require('./tweet_compose');\n\n$(function () {\n  $('button.follow-toggle').each((i, btn) => new FollowToggle(btn, {}));\n  $('.users-search').each((i, search) => new UsersSearch(search));\n  $('form.tweet-compose').each((i, form) => new TweetCompose(form));\n});\n","const APIUtil = require('./api_util');\nconst FollowToggle = require('./follow_toggle');\n\nclass UsersSearch {\n  constructor(el) {\n    this.$el = $(el);\n    this.$input = this.$el.find('input[name=username]');\n    this.$ul = this.$el.find('.users');\n\n    this.$input.on('input', this.handleInput.bind(this));\n  }\n\n  /**\n   * classic pattern: \n   * \n   * 1) 1st we write the method which is going to do what we want and saves\n   * any jquery wrapped variables, etc. we might need\n   * \n   * 2) then we call the AJAX request from within it so it can do what we need it to\n   * \n   * \n   * \n   * 3) we have the success cb available as a promise here \n   * instead of as a \"success\" setting set in the .ajax method\n   * \n   * --- bc of the .then() syntax, the moment we invoke that ajax request, ajax has made a promise\n   *\n   */\n  handleInput(event) {\n    if (this.$input.val() === '') {\n      this.renderResults([]);\n      return;\n    }\n    APIUtil.searchUsers(this.$input.val())\n      .then(users => this.renderResults(users));\n  }\n\n  renderResults(users) {\n    this.$ul.empty();\n\n    for (let i = 0; i < users.length; i++) {\n      const user = users[i];\n\n      let $a = $('<a></a>');\n      $a.text(`@${user.username}`);\n      $a.attr('href', `/users/${user.id}`);\n\n      const $followToggle = $('<button></button>');\n      new FollowToggle($followToggle, {\n        userId: user.id,\n        followState: user.followed ? 'followed' : 'unfollowed'\n      });\n\n      const $li = $('<li></li>');\n      $li.append($a);\n      $li.append($followToggle);\n\n      this.$ul.append($li);\n    }\n  }\n}\n\nmodule.exports = UsersSearch;\n"],"sourceRoot":""}